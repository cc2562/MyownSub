name: BuilAndroiAPK

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build_android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Setup Java to compile Android project
        uses: actions/setup-java@v1
        with:
          java-version: "18.x"
      - name: Kotlint
        uses: TheFabbiusCorp/gha-kotlin-linter@v1.1
      - uses: nttld/setup-ndk@v1
        with:
          ndk-version: r25c
      - name: Install and set Flutter version
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.7.12"

      - name: Create the Keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEY_PROPERTIES: ${{ secrets.KEY_PROPERTIES }}
        run: |
          # import keystore from secrets
          ls -all
          echo $KEYSTORE_BASE64 | base64 -di > android/app/key.jks
          echo $KEY_PROPERTIES | base64 -di > android/key.properties

      - name: Restore packages
        run: flutter pub get

      - name: Build Android App Bundle
        run: flutter build apk --release

      - name: Publish Android Artefacts
        uses: actions/upload-artifact@v1
        with:
          name: release-aab
          path: build/app/outputs/apk/release/app-release.apk
          
          
  release:
    name: Release APK
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Download APK from build
        uses: actions/download-artifact@v2
        with:
          name: apk
      - name: Display structure of downloaded files
        run: ls -R

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/zip
    
          

